name: Build and test

on:
  push:
    branches:
      - main
      - 'feature/**'
      - 'fix/**'

jobs:
  build-test-short:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '~1.23.7', '~1.24.1' ]
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Build
        run: go build ./...
      - name: Test
        run: go test ./... -test.short
  analyze:
    needs: build-test-short
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '~1.24.1'
      - name: Init codeQl
        uses: github/codeql-action/init@v3
        with:
          languages: go
          build-mode: manual
      - name: Coverage
        run: go test -v -coverprofile='coverage.out' -coverpkg=./... -json ./... > report.json
      - name: Upload log files on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: analyzeRunOutput
          path: |
            ${{ github.workspace }}/**/*.log
            ${{ github.workspace }}/**/report.json
          retention-days: 1
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Analyze codeQl
        uses: github/codeql-action/analyze@v3